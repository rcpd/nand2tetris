0 @0 
  // push constant 0 
  EVAL: A=0 
  A=0 D=0 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
1 D=A 
  EVAL: D=0 (0) 
  A=0 D=0 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
2 @SP 
  EVAL: A=0 
  A=0 D=0 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
3 A=M 
  EVAL: A=256 (256) 
  A=256 D=0 M=0 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
4 M=D 
  EVAL: M=0 (0) 
  A=256 D=0 M=0 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
5 @SP 
  EVAL: A=0 
  A=0 D=0 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
6 M=M+1 
  // stacksize++ 
  EVAL: M=257 (256+1) 
  A=0 D=0 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 
7 @LCL 
  // pop local 0 
  // initializes sum = 0 
  EVAL: A=1 
  A=1 D=0 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 
8 D=M 
  EVAL: D=300 (300) 
  A=1 D=300 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 
9 @0 
  // retrieve the *dst (segment+offset) and temporarily store it at *esp 
  // offset 
  EVAL: A=0 
  A=0 D=300 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 
10 D=D+A 
  // d = [asm_segment+offset] (*dst) 
  EVAL: D=300 (300+0) 
  A=0 D=300 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 
11 @SP 
  // *esp 
  EVAL: A=0 
  A=0 D=300 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 
12 A=M 
  // [esp] 
  EVAL: A=257 (257) 
  A=257 D=300 M=0 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 
13 M=D 
  // [esp] = *dst 
  EVAL: M=300 (300) 
  A=257 D=300 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 
14 @SP 
  // retrieve the *src pointer from esp-1 
  // *esp 
  EVAL: A=0 
  A=0 D=300 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 
15 M=M-1 
  // *esp-- (*src) 
  EVAL: M=256 (257-1) 
  A=0 D=300 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 
16 A=M 
  // [src] 
  EVAL: A=256 (256) 
  A=256 D=300 M=0 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 
17 D=M 
  // d = [src] 
  EVAL: D=0 (0) 
  A=256 D=0 M=0 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 
18 @SP 
  // restore esp (*esp) 
  EVAL: A=0 
  A=0 D=0 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 
19 M=M+1 
  // *esp++ (**dst) 
  EVAL: M=257 (256+1) 
  A=0 D=0 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 
20 A=M 
  // copy [src] to [dst] 
  // *dst 
  EVAL: A=257 (257) 
  A=257 D=0 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 
21 A=M 
  // [dst] 
  EVAL: A=300 (300) 
  A=300 D=0 M=0 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 
22 M=D 
  // [dst] = [src] (pop) 
  EVAL: M=0 (0) 
  A=300 D=0 M=0 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 
23 @SP 
  // *esp 
  EVAL: A=0 
  A=0 D=0 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 
24 M=M-1 
  // *esp-- (*src) 
  // stacksize-- 
  EVAL: M=256 (257-1) 
  A=0 D=0 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
25 @ARG 
  // push argument 0 
  // (BasicLoop.LOOP_START) 
  EVAL: A=2 
  A=2 D=0 M=400 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
26 D=M 
  EVAL: D=400 (400) 
  A=2 D=400 M=400 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
27 @0 
  EVAL: A=0 
  A=0 D=400 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
28 A=D+A 
  EVAL: A=400 (400+0) 
  A=400 D=400 M=3 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
29 D=M 
  EVAL: D=3 (3) 
  A=400 D=3 M=3 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
30 @SP 
  EVAL: A=0 
  A=0 D=3 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
31 A=M 
  EVAL: A=256 (256) 
  A=256 D=3 M=0 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
32 M=D 
  EVAL: M=3 (3) 
  A=256 D=3 M=3 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
33 @SP 
  EVAL: A=0 
  A=0 D=3 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
34 M=M+1 
  // stacksize++ 
  EVAL: M=257 (256+1) 
  A=0 D=3 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 
35 @LCL 
  // push local 0 
  EVAL: A=1 
  A=1 D=3 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 
36 D=M 
  EVAL: D=300 (300) 
  A=1 D=300 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 
37 @0 
  EVAL: A=0 
  A=0 D=300 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 
38 A=D+A 
  EVAL: A=300 (300+0) 
  A=300 D=300 M=0 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 
39 D=M 
  EVAL: D=0 (0) 
  A=300 D=0 M=0 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 
40 @SP 
  EVAL: A=0 
  A=0 D=0 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 
41 A=M 
  EVAL: A=257 (257) 
  A=257 D=0 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 
42 M=D 
  EVAL: M=0 (0) 
  A=257 D=0 M=0 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 
43 @SP 
  EVAL: A=0 
  A=0 D=0 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 
44 M=M+1 
  // stacksize++ 
  EVAL: M=258 (257+1) 
  A=0 D=0 M=258 R13=0 R14=0 R15=0 
  SP: 258 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 
45 @SP 
  // add 
  EVAL: A=0 
  A=0 D=0 M=258 R13=0 R14=0 R15=0 
  SP: 258 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 
46 M=M-1 
  EVAL: M=257 (258-1) 
  A=0 D=0 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 
47 A=M 
  EVAL: A=257 (257) 
  A=257 D=0 M=0 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 
48 D=M 
  EVAL: D=0 (0) 
  A=257 D=0 M=0 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 
49 @SP 
  EVAL: A=0 
  A=0 D=0 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 
50 M=M-1 
  EVAL: M=256 (257-1) 
  A=0 D=0 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 0 
51 A=M 
  EVAL: A=256 (256) 
  A=256 D=0 M=3 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 0 
52 M=D+M 
  EVAL: M=3 (0+3) 
  A=256 D=0 M=3 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 0 
53 @SP 
  EVAL: A=0 
  A=0 D=0 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 0 
54 M=M+1 
  EVAL: M=257 (256+1) 
  A=0 D=0 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 
55 @LCL 
  // pop local 0 
  // sum = sum + counter 
  EVAL: A=1 
  A=1 D=0 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 
56 D=M 
  EVAL: D=300 (300) 
  A=1 D=300 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 
57 @0 
  // retrieve the *dst (segment+offset) and temporarily store it at *esp 
  // offset 
  EVAL: A=0 
  A=0 D=300 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 
58 D=D+A 
  // d = [asm_segment+offset] (*dst) 
  EVAL: D=300 (300+0) 
  A=0 D=300 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 
59 @SP 
  // *esp 
  EVAL: A=0 
  A=0 D=300 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 
60 A=M 
  // [esp] 
  EVAL: A=257 (257) 
  A=257 D=300 M=0 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 
61 M=D 
  // [esp] = *dst 
  EVAL: M=300 (300) 
  A=257 D=300 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 
62 @SP 
  // retrieve the *src pointer from esp-1 
  // *esp 
  EVAL: A=0 
  A=0 D=300 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 
63 M=M-1 
  // *esp-- (*src) 
  EVAL: M=256 (257-1) 
  A=0 D=300 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 300 
64 A=M 
  // [src] 
  EVAL: A=256 (256) 
  A=256 D=300 M=3 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 300 
65 D=M 
  // d = [src] 
  EVAL: D=3 (3) 
  A=256 D=3 M=3 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 300 
66 @SP 
  // restore esp (*esp) 
  EVAL: A=0 
  A=0 D=3 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 300 
67 M=M+1 
  // *esp++ (**dst) 
  EVAL: M=257 (256+1) 
  A=0 D=3 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 
68 A=M 
  // copy [src] to [dst] 
  // *dst 
  EVAL: A=257 (257) 
  A=257 D=3 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 
69 A=M 
  // [dst] 
  EVAL: A=300 (300) 
  A=300 D=3 M=0 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 
70 M=D 
  // [dst] = [src] (pop) 
  EVAL: M=3 (3) 
  A=300 D=3 M=3 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 
71 @SP 
  // *esp 
  EVAL: A=0 
  A=0 D=3 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 
72 M=M-1 
  // *esp-- (*src) 
  // stacksize-- 
  EVAL: M=256 (257-1) 
  A=0 D=3 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 
73 @ARG 
  // push argument 0 
  EVAL: A=2 
  A=2 D=3 M=400 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 
74 D=M 
  EVAL: D=400 (400) 
  A=2 D=400 M=400 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 
75 @0 
  EVAL: A=0 
  A=0 D=400 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 
76 A=D+A 
  EVAL: A=400 (400+0) 
  A=400 D=400 M=3 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 
77 D=M 
  EVAL: D=3 (3) 
  A=400 D=3 M=3 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 
78 @SP 
  EVAL: A=0 
  A=0 D=3 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 
79 A=M 
  EVAL: A=256 (256) 
  A=256 D=3 M=3 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 
80 M=D 
  EVAL: M=3 (3) 
  A=256 D=3 M=3 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 
81 @SP 
  EVAL: A=0 
  A=0 D=3 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 
82 M=M+1 
  // stacksize++ 
  EVAL: M=257 (256+1) 
  A=0 D=3 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 
83 @1 
  // push constant 1 
  EVAL: A=1 
  A=1 D=3 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 
84 D=A 
  EVAL: D=1 (1) 
  A=1 D=1 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 
85 @SP 
  EVAL: A=0 
  A=0 D=1 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 
86 A=M 
  EVAL: A=257 (257) 
  A=257 D=1 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 
87 M=D 
  EVAL: M=1 (1) 
  A=257 D=1 M=1 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 
88 @SP 
  EVAL: A=0 
  A=0 D=1 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 
89 M=M+1 
  // stacksize++ 
  EVAL: M=258 (257+1) 
  A=0 D=1 M=258 R13=0 R14=0 R15=0 
  SP: 258 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 
90 @SP 
  // sub 
  EVAL: A=0 
  A=0 D=1 M=258 R13=0 R14=0 R15=0 
  SP: 258 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 
91 M=M-1 
  EVAL: M=257 (258-1) 
  A=0 D=1 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 
92 A=M 
  EVAL: A=257 (257) 
  A=257 D=1 M=1 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 
93 D=M 
  EVAL: D=1 (1) 
  A=257 D=1 M=1 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 
94 @SP 
  EVAL: A=0 
  A=0 D=1 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 
95 M=M-1 
  EVAL: M=256 (257-1) 
  A=0 D=1 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 1 0 
96 A=M 
  EVAL: A=256 (256) 
  A=256 D=1 M=3 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 1 0 
97 M=M-D 
  EVAL: M=2 (3-1) 
  A=256 D=1 M=2 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 1 0 
98 @SP 
  EVAL: A=0 
  A=0 D=1 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 1 0 
99 M=M+1 
  EVAL: M=257 (256+1) 
  A=0 D=1 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 
100 @ARG 
  // pop argument 0 
  // counter-- 
  EVAL: A=2 
  A=2 D=1 M=400 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 
101 D=M 
  EVAL: D=400 (400) 
  A=2 D=400 M=400 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 
102 @0 
  // retrieve the *dst (segment+offset) and temporarily store it at *esp 
  // offset 
  EVAL: A=0 
  A=0 D=400 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 
103 D=D+A 
  // d = [asm_segment+offset] (*dst) 
  EVAL: D=400 (400+0) 
  A=0 D=400 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 
104 @SP 
  // *esp 
  EVAL: A=0 
  A=0 D=400 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 
105 A=M 
  // [esp] 
  EVAL: A=257 (257) 
  A=257 D=400 M=1 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 
106 M=D 
  // [esp] = *dst 
  EVAL: M=400 (400) 
  A=257 D=400 M=400 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 
107 @SP 
  // retrieve the *src pointer from esp-1 
  // *esp 
  EVAL: A=0 
  A=0 D=400 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 
108 M=M-1 
  // *esp-- (*src) 
  EVAL: M=256 (257-1) 
  A=0 D=400 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 400 0 
109 A=M 
  // [src] 
  EVAL: A=256 (256) 
  A=256 D=400 M=2 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 400 0 
110 D=M 
  // d = [src] 
  EVAL: D=2 (2) 
  A=256 D=2 M=2 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 400 0 
111 @SP 
  // restore esp (*esp) 
  EVAL: A=0 
  A=0 D=2 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 400 0 
112 M=M+1 
  // *esp++ (**dst) 
  EVAL: M=257 (256+1) 
  A=0 D=2 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 
113 A=M 
  // copy [src] to [dst] 
  // *dst 
  EVAL: A=257 (257) 
  A=257 D=2 M=400 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 
114 A=M 
  // [dst] 
  EVAL: A=400 (400) 
  A=400 D=2 M=3 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 
115 M=D 
  // [dst] = [src] (pop) 
  EVAL: M=2 (2) 
  A=400 D=2 M=2 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 
116 @SP 
  // *esp 
  EVAL: A=0 
  A=0 D=2 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 
117 M=M-1 
  // *esp-- (*src) 
  // stacksize-- 
  EVAL: M=256 (257-1) 
  A=0 D=2 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 400 
118 @ARG 
  // push argument 0 
  EVAL: A=2 
  A=2 D=2 M=400 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 400 
119 D=M 
  EVAL: D=400 (400) 
  A=2 D=400 M=400 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 400 
120 @0 
  EVAL: A=0 
  A=0 D=400 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 400 
121 A=D+A 
  EVAL: A=400 (400+0) 
  A=400 D=400 M=2 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 400 
122 D=M 
  EVAL: D=2 (2) 
  A=400 D=2 M=2 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 400 
123 @SP 
  EVAL: A=0 
  A=0 D=2 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 400 
124 A=M 
  EVAL: A=256 (256) 
  A=256 D=2 M=2 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 400 
125 M=D 
  EVAL: M=2 (2) 
  A=256 D=2 M=2 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 400 
126 @SP 
  EVAL: A=0 
  A=0 D=2 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 400 
127 M=M+1 
  // stacksize++ 
  EVAL: M=257 (256+1) 
  A=0 D=2 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 
128 @0 
  // if-goto LOOP_START 
  // If counter > 0, goto LOOP_START 
  EVAL: A=0 
  A=0 D=2 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 
129 D=A 
  // push a zero onto the stack 
  EVAL: D=0 (0) 
  A=0 D=0 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 
130 @SP 
  EVAL: A=0 
  A=0 D=0 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 
131 A=M 
  EVAL: A=257 (257) 
  A=257 D=0 M=400 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 
132 M=D 
  EVAL: M=0 (0) 
  A=257 D=0 M=0 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 
133 @SP 
  EVAL: A=0 
  A=0 D=0 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 
134 M=M+1 
  EVAL: M=258 (257+1) 
  A=0 D=0 M=258 R13=0 R14=0 R15=0 
  SP: 258 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 
135 @SP 
  // *esp 
  // compare val1 (if-goto conditional) with val2 (zero) 
  EVAL: A=0 
  A=0 D=0 M=258 R13=0 R14=0 R15=0 
  SP: 258 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 
136 M=M-1 
  // *esp-- (*val2) 
  EVAL: M=257 (258-1) 
  A=0 D=0 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 
137 A=M 
  // [val2] 
  EVAL: A=257 (257) 
  A=257 D=0 M=0 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 
138 D=M 
  // d = [val2] 
  EVAL: D=0 (0) 
  A=257 D=0 M=0 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 
139 @SP 
  // *esp (*val2) 
  EVAL: A=0 
  A=0 D=0 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 
140 M=M-1 
  // *esp-- (*val1) 
  EVAL: M=256 (257-1) 
  A=0 D=0 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 0 0 
141 A=M 
  // [esp] ([val1]) 
  EVAL: A=256 (256) 
  A=256 D=0 M=2 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 0 0 
142 D=M-D 
  // d = [val1] - [val2] 
  // leave esp here (pop equivalent) 
  EVAL: D=2 (2-0) 
  A=256 D=2 M=2 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 0 0 
143 @BasicLoop.LOOP_START 
  EVAL: A=25 
  A=25 D=2 M=0 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 0 0 
24 D;JNE 
  // jump if not zero 
  EVAL: A=25 
  A=25 D=2 M=0 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 0 0 
25 @ARG 
  // push argument 0 
  // (BasicLoop.LOOP_START) 
  EVAL: A=2 
  A=2 D=2 M=400 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 0 0 
26 D=M 
  EVAL: D=400 (400) 
  A=2 D=400 M=400 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 0 0 
27 @0 
  EVAL: A=0 
  A=0 D=400 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 0 0 
28 A=D+A 
  EVAL: A=400 (400+0) 
  A=400 D=400 M=2 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 0 0 
29 D=M 
  EVAL: D=2 (2) 
  A=400 D=2 M=2 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 0 0 
30 @SP 
  EVAL: A=0 
  A=0 D=2 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 0 0 
31 A=M 
  EVAL: A=256 (256) 
  A=256 D=2 M=2 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 0 0 
32 M=D 
  EVAL: M=2 (2) 
  A=256 D=2 M=2 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 0 0 
33 @SP 
  EVAL: A=0 
  A=0 D=2 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 0 0 
34 M=M+1 
  // stacksize++ 
  EVAL: M=257 (256+1) 
  A=0 D=2 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 
35 @LCL 
  // push local 0 
  EVAL: A=1 
  A=1 D=2 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 
36 D=M 
  EVAL: D=300 (300) 
  A=1 D=300 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 
37 @0 
  EVAL: A=0 
  A=0 D=300 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 
38 A=D+A 
  EVAL: A=300 (300+0) 
  A=300 D=300 M=3 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 
39 D=M 
  EVAL: D=3 (3) 
  A=300 D=3 M=3 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 
40 @SP 
  EVAL: A=0 
  A=0 D=3 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 
41 A=M 
  EVAL: A=257 (257) 
  A=257 D=3 M=0 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 
42 M=D 
  EVAL: M=3 (3) 
  A=257 D=3 M=3 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 0 0 0 
43 @SP 
  EVAL: A=0 
  A=0 D=3 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 0 0 0 
44 M=M+1 
  // stacksize++ 
  EVAL: M=258 (257+1) 
  A=0 D=3 M=258 R13=0 R14=0 R15=0 
  SP: 258 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 
45 @SP 
  // add 
  EVAL: A=0 
  A=0 D=3 M=258 R13=0 R14=0 R15=0 
  SP: 258 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 
46 M=M-1 
  EVAL: M=257 (258-1) 
  A=0 D=3 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 0 0 0 0 
47 A=M 
  EVAL: A=257 (257) 
  A=257 D=3 M=3 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 0 0 0 0 
48 D=M 
  EVAL: D=3 (3) 
  A=257 D=3 M=3 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 0 0 0 0 
49 @SP 
  EVAL: A=0 
  A=0 D=3 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 0 0 0 0 
50 M=M-1 
  EVAL: M=256 (257-1) 
  A=0 D=3 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 3 0 0 0 
51 A=M 
  EVAL: A=256 (256) 
  A=256 D=3 M=2 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 3 0 0 0 
52 M=D+M 
  EVAL: M=5 (3+2) 
  A=256 D=3 M=5 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 5 3 0 0 0 
53 @SP 
  EVAL: A=0 
  A=0 D=3 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 5 3 0 0 0 
54 M=M+1 
  EVAL: M=257 (256+1) 
  A=0 D=3 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 0 0 0 0 
55 @LCL 
  // pop local 0 
  // sum = sum + counter 
  EVAL: A=1 
  A=1 D=3 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 0 0 0 0 
56 D=M 
  EVAL: D=300 (300) 
  A=1 D=300 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 0 0 0 0 
57 @0 
  // retrieve the *dst (segment+offset) and temporarily store it at *esp 
  // offset 
  EVAL: A=0 
  A=0 D=300 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 0 0 0 0 
58 D=D+A 
  // d = [asm_segment+offset] (*dst) 
  EVAL: D=300 (300+0) 
  A=0 D=300 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 0 0 0 0 
59 @SP 
  // *esp 
  EVAL: A=0 
  A=0 D=300 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 0 0 0 0 
60 A=M 
  // [esp] 
  EVAL: A=257 (257) 
  A=257 D=300 M=3 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 3 0 0 0 0 
61 M=D 
  // [esp] = *dst 
  EVAL: M=300 (300) 
  A=257 D=300 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 0 0 0 
62 @SP 
  // retrieve the *src pointer from esp-1 
  // *esp 
  EVAL: A=0 
  A=0 D=300 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 0 0 0 
63 M=M-1 
  // *esp-- (*src) 
  EVAL: M=256 (257-1) 
  A=0 D=300 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 5 300 0 0 0 
64 A=M 
  // [src] 
  EVAL: A=256 (256) 
  A=256 D=300 M=5 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 5 300 0 0 0 
65 D=M 
  // d = [src] 
  EVAL: D=5 (5) 
  A=256 D=5 M=5 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 5 300 0 0 0 
66 @SP 
  // restore esp (*esp) 
  EVAL: A=0 
  A=0 D=5 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 5 300 0 0 0 
67 M=M+1 
  // *esp++ (**dst) 
  EVAL: M=257 (256+1) 
  A=0 D=5 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 0 0 0 
68 A=M 
  // copy [src] to [dst] 
  // *dst 
  EVAL: A=257 (257) 
  A=257 D=5 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 0 0 0 
69 A=M 
  // [dst] 
  EVAL: A=300 (300) 
  A=300 D=5 M=3 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 0 0 0 
70 M=D 
  // [dst] = [src] (pop) 
  EVAL: M=5 (5) 
  A=300 D=5 M=5 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 0 0 0 
71 @SP 
  // *esp 
  EVAL: A=0 
  A=0 D=5 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 0 0 0 
72 M=M-1 
  // *esp-- (*src) 
  // stacksize-- 
  EVAL: M=256 (257-1) 
  A=0 D=5 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 5 300 0 0 
73 @ARG 
  // push argument 0 
  EVAL: A=2 
  A=2 D=5 M=400 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 5 300 0 0 
74 D=M 
  EVAL: D=400 (400) 
  A=2 D=400 M=400 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 5 300 0 0 
75 @0 
  EVAL: A=0 
  A=0 D=400 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 5 300 0 0 
76 A=D+A 
  EVAL: A=400 (400+0) 
  A=400 D=400 M=2 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 5 300 0 0 
77 D=M 
  EVAL: D=2 (2) 
  A=400 D=2 M=2 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 5 300 0 0 
78 @SP 
  EVAL: A=0 
  A=0 D=2 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 5 300 0 0 
79 A=M 
  EVAL: A=256 (256) 
  A=256 D=2 M=5 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 5 300 0 0 
80 M=D 
  EVAL: M=2 (2) 
  A=256 D=2 M=2 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 300 0 0 
81 @SP 
  EVAL: A=0 
  A=0 D=2 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 300 0 0 
82 M=M+1 
  // stacksize++ 
  EVAL: M=257 (256+1) 
  A=0 D=2 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 0 0 0 
83 @1 
  // push constant 1 
  EVAL: A=1 
  A=1 D=2 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 0 0 0 
84 D=A 
  EVAL: D=1 (1) 
  A=1 D=1 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 0 0 0 
85 @SP 
  EVAL: A=0 
  A=0 D=1 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 0 0 0 
86 A=M 
  EVAL: A=257 (257) 
  A=257 D=1 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 0 0 0 
87 M=D 
  EVAL: M=1 (1) 
  A=257 D=1 M=1 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 
88 @SP 
  EVAL: A=0 
  A=0 D=1 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 
89 M=M+1 
  // stacksize++ 
  EVAL: M=258 (257+1) 
  A=0 D=1 M=258 R13=0 R14=0 R15=0 
  SP: 258 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 
90 @SP 
  // sub 
  EVAL: A=0 
  A=0 D=1 M=258 R13=0 R14=0 R15=0 
  SP: 258 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 
91 M=M-1 
  EVAL: M=257 (258-1) 
  A=0 D=1 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 
92 A=M 
  EVAL: A=257 (257) 
  A=257 D=1 M=1 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 
93 D=M 
  EVAL: D=1 (1) 
  A=257 D=1 M=1 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 
94 @SP 
  EVAL: A=0 
  A=0 D=1 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 
95 M=M-1 
  EVAL: M=256 (257-1) 
  A=0 D=1 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 1 0 0 0 0 
96 A=M 
  EVAL: A=256 (256) 
  A=256 D=1 M=2 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 2 1 0 0 0 0 
97 M=M-D 
  EVAL: M=1 (2-1) 
  A=256 D=1 M=1 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 1 0 0 0 0 
98 @SP 
  EVAL: A=0 
  A=0 D=1 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 1 0 0 0 0 
99 M=M+1 
  EVAL: M=257 (256+1) 
  A=0 D=1 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 
100 @ARG 
  // pop argument 0 
  // counter-- 
  EVAL: A=2 
  A=2 D=1 M=400 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 
101 D=M 
  EVAL: D=400 (400) 
  A=2 D=400 M=400 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 
102 @0 
  // retrieve the *dst (segment+offset) and temporarily store it at *esp 
  // offset 
  EVAL: A=0 
  A=0 D=400 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 
103 D=D+A 
  // d = [asm_segment+offset] (*dst) 
  EVAL: D=400 (400+0) 
  A=0 D=400 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 
104 @SP 
  // *esp 
  EVAL: A=0 
  A=0 D=400 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 
105 A=M 
  // [esp] 
  EVAL: A=257 (257) 
  A=257 D=400 M=1 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 
106 M=D 
  // [esp] = *dst 
  EVAL: M=400 (400) 
  A=257 D=400 M=400 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 0 0 0 
107 @SP 
  // retrieve the *src pointer from esp-1 
  // *esp 
  EVAL: A=0 
  A=0 D=400 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 0 0 0 
108 M=M-1 
  // *esp-- (*src) 
  EVAL: M=256 (257-1) 
  A=0 D=400 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 400 0 0 0 0 
109 A=M 
  // [src] 
  EVAL: A=256 (256) 
  A=256 D=400 M=1 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 400 0 0 0 0 
110 D=M 
  // d = [src] 
  EVAL: D=1 (1) 
  A=256 D=1 M=1 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 400 0 0 0 0 
111 @SP 
  // restore esp (*esp) 
  EVAL: A=0 
  A=0 D=1 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 400 0 0 0 0 
112 M=M+1 
  // *esp++ (**dst) 
  EVAL: M=257 (256+1) 
  A=0 D=1 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 0 0 0 
113 A=M 
  // copy [src] to [dst] 
  // *dst 
  EVAL: A=257 (257) 
  A=257 D=1 M=400 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 0 0 0 
114 A=M 
  // [dst] 
  EVAL: A=400 (400) 
  A=400 D=1 M=2 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 0 0 0 
115 M=D 
  // [dst] = [src] (pop) 
  EVAL: M=1 (1) 
  A=400 D=1 M=1 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 0 0 0 
116 @SP 
  // *esp 
  EVAL: A=0 
  A=0 D=1 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 0 0 0 
117 M=M-1 
  // *esp-- (*src) 
  // stacksize-- 
  EVAL: M=256 (257-1) 
  A=0 D=1 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 400 0 0 0 
118 @ARG 
  // push argument 0 
  EVAL: A=2 
  A=2 D=1 M=400 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 400 0 0 0 
119 D=M 
  EVAL: D=400 (400) 
  A=2 D=400 M=400 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 400 0 0 0 
120 @0 
  EVAL: A=0 
  A=0 D=400 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 400 0 0 0 
121 A=D+A 
  EVAL: A=400 (400+0) 
  A=400 D=400 M=1 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 400 0 0 0 
122 D=M 
  EVAL: D=1 (1) 
  A=400 D=1 M=1 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 400 0 0 0 
123 @SP 
  EVAL: A=0 
  A=0 D=1 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 400 0 0 0 
124 A=M 
  EVAL: A=256 (256) 
  A=256 D=1 M=1 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 400 0 0 0 
125 M=D 
  EVAL: M=1 (1) 
  A=256 D=1 M=1 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 400 0 0 0 
126 @SP 
  EVAL: A=0 
  A=0 D=1 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 400 0 0 0 
127 M=M+1 
  // stacksize++ 
  EVAL: M=257 (256+1) 
  A=0 D=1 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 0 0 0 
128 @0 
  // if-goto LOOP_START 
  // If counter > 0, goto LOOP_START 
  EVAL: A=0 
  A=0 D=1 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 0 0 0 
129 D=A 
  // push a zero onto the stack 
  EVAL: D=0 (0) 
  A=0 D=0 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 0 0 0 
130 @SP 
  EVAL: A=0 
  A=0 D=0 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 0 0 0 
131 A=M 
  EVAL: A=257 (257) 
  A=257 D=0 M=400 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 0 0 0 
132 M=D 
  EVAL: M=0 (0) 
  A=257 D=0 M=0 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 
133 @SP 
  EVAL: A=0 
  A=0 D=0 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 
134 M=M+1 
  EVAL: M=258 (257+1) 
  A=0 D=0 M=258 R13=0 R14=0 R15=0 
  SP: 258 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 
135 @SP 
  // *esp 
  // compare val1 (if-goto conditional) with val2 (zero) 
  EVAL: A=0 
  A=0 D=0 M=258 R13=0 R14=0 R15=0 
  SP: 258 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 
136 M=M-1 
  // *esp-- (*val2) 
  EVAL: M=257 (258-1) 
  A=0 D=0 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 
137 A=M 
  // [val2] 
  EVAL: A=257 (257) 
  A=257 D=0 M=0 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 
138 D=M 
  // d = [val2] 
  EVAL: D=0 (0) 
  A=257 D=0 M=0 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 
139 @SP 
  // *esp (*val2) 
  EVAL: A=0 
  A=0 D=0 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 
140 M=M-1 
  // *esp-- (*val1) 
  EVAL: M=256 (257-1) 
  A=0 D=0 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 
141 A=M 
  // [esp] ([val1]) 
  EVAL: A=256 (256) 
  A=256 D=0 M=1 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 
142 D=M-D 
  // d = [val1] - [val2] 
  // leave esp here (pop equivalent) 
  EVAL: D=1 (1-0) 
  A=256 D=1 M=1 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 
143 @BasicLoop.LOOP_START 
  EVAL: A=25 
  A=25 D=1 M=0 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 
24 D;JNE 
  // jump if not zero 
  EVAL: A=25 
  A=25 D=1 M=0 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 
25 @ARG 
  // push argument 0 
  // (BasicLoop.LOOP_START) 
  EVAL: A=2 
  A=2 D=1 M=400 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 
26 D=M 
  EVAL: D=400 (400) 
  A=2 D=400 M=400 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 
27 @0 
  EVAL: A=0 
  A=0 D=400 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 
28 A=D+A 
  EVAL: A=400 (400+0) 
  A=400 D=400 M=1 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 
29 D=M 
  EVAL: D=1 (1) 
  A=400 D=1 M=1 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 
30 @SP 
  EVAL: A=0 
  A=0 D=1 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 
31 A=M 
  EVAL: A=256 (256) 
  A=256 D=1 M=1 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 
32 M=D 
  EVAL: M=1 (1) 
  A=256 D=1 M=1 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 
33 @SP 
  EVAL: A=0 
  A=0 D=1 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 
34 M=M+1 
  // stacksize++ 
  EVAL: M=257 (256+1) 
  A=0 D=1 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 
35 @LCL 
  // push local 0 
  EVAL: A=1 
  A=1 D=1 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 
36 D=M 
  EVAL: D=300 (300) 
  A=1 D=300 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 
37 @0 
  EVAL: A=0 
  A=0 D=300 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 
38 A=D+A 
  EVAL: A=300 (300+0) 
  A=300 D=300 M=5 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 
39 D=M 
  EVAL: D=5 (5) 
  A=300 D=5 M=5 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 
40 @SP 
  EVAL: A=0 
  A=0 D=5 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 
41 A=M 
  EVAL: A=257 (257) 
  A=257 D=5 M=0 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 
42 M=D 
  EVAL: M=5 (5) 
  A=257 D=5 M=5 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 5 0 0 0 0 0 0 
43 @SP 
  EVAL: A=0 
  A=0 D=5 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 5 0 0 0 0 0 0 
44 M=M+1 
  // stacksize++ 
  EVAL: M=258 (257+1) 
  A=0 D=5 M=258 R13=0 R14=0 R15=0 
  SP: 258 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 0 
45 @SP 
  // add 
  EVAL: A=0 
  A=0 D=5 M=258 R13=0 R14=0 R15=0 
  SP: 258 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 0 
46 M=M-1 
  EVAL: M=257 (258-1) 
  A=0 D=5 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 5 0 0 0 0 0 0 0 
47 A=M 
  EVAL: A=257 (257) 
  A=257 D=5 M=5 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 5 0 0 0 0 0 0 0 
48 D=M 
  EVAL: D=5 (5) 
  A=257 D=5 M=5 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 5 0 0 0 0 0 0 0 
49 @SP 
  EVAL: A=0 
  A=0 D=5 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 5 0 0 0 0 0 0 0 
50 M=M-1 
  EVAL: M=256 (257-1) 
  A=0 D=5 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 5 0 0 0 0 0 0 
51 A=M 
  EVAL: A=256 (256) 
  A=256 D=5 M=1 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 5 0 0 0 0 0 0 
52 M=D+M 
  EVAL: M=6 (5+1) 
  A=256 D=5 M=6 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 6 5 0 0 0 0 0 0 
53 @SP 
  EVAL: A=0 
  A=0 D=5 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 6 5 0 0 0 0 0 0 
54 M=M+1 
  EVAL: M=257 (256+1) 
  A=0 D=5 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 5 0 0 0 0 0 0 0 
55 @LCL 
  // pop local 0 
  // sum = sum + counter 
  EVAL: A=1 
  A=1 D=5 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 5 0 0 0 0 0 0 0 
56 D=M 
  EVAL: D=300 (300) 
  A=1 D=300 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 5 0 0 0 0 0 0 0 
57 @0 
  // retrieve the *dst (segment+offset) and temporarily store it at *esp 
  // offset 
  EVAL: A=0 
  A=0 D=300 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 5 0 0 0 0 0 0 0 
58 D=D+A 
  // d = [asm_segment+offset] (*dst) 
  EVAL: D=300 (300+0) 
  A=0 D=300 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 5 0 0 0 0 0 0 0 
59 @SP 
  // *esp 
  EVAL: A=0 
  A=0 D=300 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 5 0 0 0 0 0 0 0 
60 A=M 
  // [esp] 
  EVAL: A=257 (257) 
  A=257 D=300 M=5 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 5 0 0 0 0 0 0 0 
61 M=D 
  // [esp] = *dst 
  EVAL: M=300 (300) 
  A=257 D=300 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 0 0 0 0 0 0 
62 @SP 
  // retrieve the *src pointer from esp-1 
  // *esp 
  EVAL: A=0 
  A=0 D=300 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 0 0 0 0 0 0 
63 M=M-1 
  // *esp-- (*src) 
  EVAL: M=256 (257-1) 
  A=0 D=300 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 6 300 0 0 0 0 0 0 
64 A=M 
  // [src] 
  EVAL: A=256 (256) 
  A=256 D=300 M=6 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 6 300 0 0 0 0 0 0 
65 D=M 
  // d = [src] 
  EVAL: D=6 (6) 
  A=256 D=6 M=6 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 6 300 0 0 0 0 0 0 
66 @SP 
  // restore esp (*esp) 
  EVAL: A=0 
  A=0 D=6 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 6 300 0 0 0 0 0 0 
67 M=M+1 
  // *esp++ (**dst) 
  EVAL: M=257 (256+1) 
  A=0 D=6 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 0 0 0 0 0 0 
68 A=M 
  // copy [src] to [dst] 
  // *dst 
  EVAL: A=257 (257) 
  A=257 D=6 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 0 0 0 0 0 0 
69 A=M 
  // [dst] 
  EVAL: A=300 (300) 
  A=300 D=6 M=5 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 0 0 0 0 0 0 
70 M=D 
  // [dst] = [src] (pop) 
  EVAL: M=6 (6) 
  A=300 D=6 M=6 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 0 0 0 0 0 0 
71 @SP 
  // *esp 
  EVAL: A=0 
  A=0 D=6 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 0 0 0 0 0 0 
72 M=M-1 
  // *esp-- (*src) 
  // stacksize-- 
  EVAL: M=256 (257-1) 
  A=0 D=6 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 6 300 0 0 0 0 0 
73 @ARG 
  // push argument 0 
  EVAL: A=2 
  A=2 D=6 M=400 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 6 300 0 0 0 0 0 
74 D=M 
  EVAL: D=400 (400) 
  A=2 D=400 M=400 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 6 300 0 0 0 0 0 
75 @0 
  EVAL: A=0 
  A=0 D=400 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 6 300 0 0 0 0 0 
76 A=D+A 
  EVAL: A=400 (400+0) 
  A=400 D=400 M=1 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 6 300 0 0 0 0 0 
77 D=M 
  EVAL: D=1 (1) 
  A=400 D=1 M=1 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 6 300 0 0 0 0 0 
78 @SP 
  EVAL: A=0 
  A=0 D=1 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 6 300 0 0 0 0 0 
79 A=M 
  EVAL: A=256 (256) 
  A=256 D=1 M=6 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 6 300 0 0 0 0 0 
80 M=D 
  EVAL: M=1 (1) 
  A=256 D=1 M=1 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 300 0 0 0 0 0 
81 @SP 
  EVAL: A=0 
  A=0 D=1 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 300 0 0 0 0 0 
82 M=M+1 
  // stacksize++ 
  EVAL: M=257 (256+1) 
  A=0 D=1 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 0 0 0 0 0 0 
83 @1 
  // push constant 1 
  EVAL: A=1 
  A=1 D=1 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 0 0 0 0 0 0 
84 D=A 
  EVAL: D=1 (1) 
  A=1 D=1 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 0 0 0 0 0 0 
85 @SP 
  EVAL: A=0 
  A=0 D=1 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 0 0 0 0 0 0 
86 A=M 
  EVAL: A=257 (257) 
  A=257 D=1 M=300 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 300 0 0 0 0 0 0 0 
87 M=D 
  EVAL: M=1 (1) 
  A=257 D=1 M=1 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 0 0 
88 @SP 
  EVAL: A=0 
  A=0 D=1 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 0 0 
89 M=M+1 
  // stacksize++ 
  EVAL: M=258 (257+1) 
  A=0 D=1 M=258 R13=0 R14=0 R15=0 
  SP: 258 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 0 0 
90 @SP 
  // sub 
  EVAL: A=0 
  A=0 D=1 M=258 R13=0 R14=0 R15=0 
  SP: 258 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 0 0 
91 M=M-1 
  EVAL: M=257 (258-1) 
  A=0 D=1 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 0 0 0 
92 A=M 
  EVAL: A=257 (257) 
  A=257 D=1 M=1 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 0 0 0 
93 D=M 
  EVAL: D=1 (1) 
  A=257 D=1 M=1 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 0 0 0 
94 @SP 
  EVAL: A=0 
  A=0 D=1 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 0 0 0 
95 M=M-1 
  EVAL: M=256 (257-1) 
  A=0 D=1 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 1 0 0 0 0 0 0 0 
96 A=M 
  EVAL: A=256 (256) 
  A=256 D=1 M=1 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 1 0 0 0 0 0 0 0 
97 M=M-D 
  EVAL: M=0 (1-1) 
  A=256 D=1 M=0 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 1 0 0 0 0 0 0 0 
98 @SP 
  EVAL: A=0 
  A=0 D=1 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 1 0 0 0 0 0 0 0 
99 M=M+1 
  EVAL: M=257 (256+1) 
  A=0 D=1 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 0 0 0 
100 @ARG 
  // pop argument 0 
  // counter-- 
  EVAL: A=2 
  A=2 D=1 M=400 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 0 0 0 
101 D=M 
  EVAL: D=400 (400) 
  A=2 D=400 M=400 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 0 0 0 
102 @0 
  // retrieve the *dst (segment+offset) and temporarily store it at *esp 
  // offset 
  EVAL: A=0 
  A=0 D=400 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 0 0 0 
103 D=D+A 
  // d = [asm_segment+offset] (*dst) 
  EVAL: D=400 (400+0) 
  A=0 D=400 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 0 0 0 
104 @SP 
  // *esp 
  EVAL: A=0 
  A=0 D=400 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 0 0 0 
105 A=M 
  // [esp] 
  EVAL: A=257 (257) 
  A=257 D=400 M=1 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 1 0 0 0 0 0 0 0 0 
106 M=D 
  // [esp] = *dst 
  EVAL: M=400 (400) 
  A=257 D=400 M=400 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 0 0 0 0 0 0 
107 @SP 
  // retrieve the *src pointer from esp-1 
  // *esp 
  EVAL: A=0 
  A=0 D=400 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 0 0 0 0 0 0 
108 M=M-1 
  // *esp-- (*src) 
  EVAL: M=256 (257-1) 
  A=0 D=400 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 400 0 0 0 0 0 0 0 
109 A=M 
  // [src] 
  EVAL: A=256 (256) 
  A=256 D=400 M=0 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 400 0 0 0 0 0 0 0 
110 D=M 
  // d = [src] 
  EVAL: D=0 (0) 
  A=256 D=0 M=0 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 400 0 0 0 0 0 0 0 
111 @SP 
  // restore esp (*esp) 
  EVAL: A=0 
  A=0 D=0 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 400 0 0 0 0 0 0 0 
112 M=M+1 
  // *esp++ (**dst) 
  EVAL: M=257 (256+1) 
  A=0 D=0 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 0 0 0 0 0 0 
113 A=M 
  // copy [src] to [dst] 
  // *dst 
  EVAL: A=257 (257) 
  A=257 D=0 M=400 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 0 0 0 0 0 0 
114 A=M 
  // [dst] 
  EVAL: A=400 (400) 
  A=400 D=0 M=1 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 0 0 0 0 0 0 
115 M=D 
  // [dst] = [src] (pop) 
  EVAL: M=0 (0) 
  A=400 D=0 M=0 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 0 0 0 0 0 0 
116 @SP 
  // *esp 
  EVAL: A=0 
  A=0 D=0 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 0 0 0 0 0 0 
117 M=M-1 
  // *esp-- (*src) 
  // stacksize-- 
  EVAL: M=256 (257-1) 
  A=0 D=0 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 400 0 0 0 0 0 0 
118 @ARG 
  // push argument 0 
  EVAL: A=2 
  A=2 D=0 M=400 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 400 0 0 0 0 0 0 
119 D=M 
  EVAL: D=400 (400) 
  A=2 D=400 M=400 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 400 0 0 0 0 0 0 
120 @0 
  EVAL: A=0 
  A=0 D=400 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 400 0 0 0 0 0 0 
121 A=D+A 
  EVAL: A=400 (400+0) 
  A=400 D=400 M=0 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 400 0 0 0 0 0 0 
122 D=M 
  EVAL: D=0 (0) 
  A=400 D=0 M=0 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 400 0 0 0 0 0 0 
123 @SP 
  EVAL: A=0 
  A=0 D=0 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 400 0 0 0 0 0 0 
124 A=M 
  EVAL: A=256 (256) 
  A=256 D=0 M=0 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 400 0 0 0 0 0 0 
125 M=D 
  EVAL: M=0 (0) 
  A=256 D=0 M=0 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 400 0 0 0 0 0 0 
126 @SP 
  EVAL: A=0 
  A=0 D=0 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 400 0 0 0 0 0 0 
127 M=M+1 
  // stacksize++ 
  EVAL: M=257 (256+1) 
  A=0 D=0 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 0 0 0 0 0 0 
128 @0 
  // if-goto LOOP_START 
  // If counter > 0, goto LOOP_START 
  EVAL: A=0 
  A=0 D=0 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 0 0 0 0 0 0 
129 D=A 
  // push a zero onto the stack 
  EVAL: D=0 (0) 
  A=0 D=0 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 0 0 0 0 0 0 
130 @SP 
  EVAL: A=0 
  A=0 D=0 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 0 0 0 0 0 0 
131 A=M 
  EVAL: A=257 (257) 
  A=257 D=0 M=400 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 400 0 0 0 0 0 0 0 0 
132 M=D 
  EVAL: M=0 (0) 
  A=257 D=0 M=0 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 0 0 
133 @SP 
  EVAL: A=0 
  A=0 D=0 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 0 0 
134 M=M+1 
  EVAL: M=258 (257+1) 
  A=0 D=0 M=258 R13=0 R14=0 R15=0 
  SP: 258 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 0 0 
135 @SP 
  // *esp 
  // compare val1 (if-goto conditional) with val2 (zero) 
  EVAL: A=0 
  A=0 D=0 M=258 R13=0 R14=0 R15=0 
  SP: 258 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 0 0 
136 M=M-1 
  // *esp-- (*val2) 
  EVAL: M=257 (258-1) 
  A=0 D=0 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 0 0 
137 A=M 
  // [val2] 
  EVAL: A=257 (257) 
  A=257 D=0 M=0 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 0 0 
138 D=M 
  // d = [val2] 
  EVAL: D=0 (0) 
  A=257 D=0 M=0 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 0 0 
139 @SP 
  // *esp (*val2) 
  EVAL: A=0 
  A=0 D=0 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 0 0 
140 M=M-1 
  // *esp-- (*val1) 
  EVAL: M=256 (257-1) 
  A=0 D=0 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 0 0 
141 A=M 
  // [esp] ([val1]) 
  EVAL: A=256 (256) 
  A=256 D=0 M=0 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 0 0 
142 D=M-D 
  // d = [val1] - [val2] 
  // leave esp here (pop equivalent) 
  EVAL: D=0 (0-0) 
  A=256 D=0 M=0 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 0 0 
143 @BasicLoop.LOOP_START 
  EVAL: A=25 
  A=25 D=0 M=0 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 0 0 
144 D;JNE 
  // jump if not zero 
  EVAL: A=25 
  A=25 D=0 M=0 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 0 0 
145 @LCL 
  // push local 0 
  EVAL: A=1 
  A=1 D=0 M=300 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 0 0 
146 D=M 
  EVAL: D=300 (300) 
  A=1 D=300 M=300 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 0 0 
147 @0 
  EVAL: A=0 
  A=0 D=300 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 0 0 
148 A=D+A 
  EVAL: A=300 (300+0) 
  A=300 D=300 M=6 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 0 0 
149 D=M 
  EVAL: D=6 (6) 
  A=300 D=6 M=6 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 0 0 
150 @SP 
  EVAL: A=0 
  A=0 D=6 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 0 0 
151 A=M 
  EVAL: A=256 (256) 
  A=256 D=6 M=0 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 0 0 
152 M=D 
  EVAL: M=6 (6) 
  A=256 D=6 M=6 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 6 0 0 0 0 0 0 0 0 
153 @SP 
  EVAL: A=0 
  A=0 D=6 M=256 R13=0 R14=0 R15=0 
  SP: 256 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 6 0 0 0 0 0 0 0 0 
154 M=M+1 
  // stacksize++ 
  EVAL: M=257 (256+1) 
  A=0 D=6 M=257 R13=0 R14=0 R15=0 
  SP: 257 LCL=300 ARG=400 THIS=0 THAT=0 
  TEMP0-7: 0 0 0 0 0 0 0 0 
  STACK: 0 0 0 0 0 0 0 0 0 0 
