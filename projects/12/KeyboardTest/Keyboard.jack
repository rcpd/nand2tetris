// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    /** Initializes the keyboard. */
    function void init() {
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        // inspect hardware memory buffer for keyboard event
        return Memory.peek(24576);
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
        var char keyDown, keyUp;

        do Output.printChar(0); // blank char

        // run loop at least once (keyUp = 0)
        // break when keyUp set & keyDown unset
        while ((keyUp = 0) | (keyDown > 0)) {
            // keyDown is polled until keyPressed
            let keyDown = Keyboard.keyPressed();
            
            // update keyUp continously during keyDown
            if (keyDown > 0) {
                let keyUp = keyDown;
            }
        }

        // replace blank char with key pressed
        do Output.printChar(String.backSpace());
        do Output.printChar(keyUp);

        return keyUp;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var char inputChar, newline, backspace;
        var String inputString;
        var boolean endOfLine;

        let inputString = String.new(80);
        do Output.printString(message);
        let newline = String.newLine();
        let backspace = String.backSpace();

        while(~endOfLine) {
            let inputChar = Keyboard.readChar();
            let endOfLine = (inputChar = newline);

            if (~endOfLine) {
                if (inputChar = backspace) {
                    do inputString.eraseLastChar();
                }
                else {
                    let inputString = inputString.appendChar(inputChar);
                }
            }
        }

        return inputString;
    } 

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
        var String inputString;
        var int inputInt;

        let inputString = Keyboard.readLine(message);
        let inputInt = inputString.intValue();
        do inputString.dispose();
        return inputInt;
    }
}
